{% extends 'base.html.twig' %}

{% block title %}Shogi{% endblock %}

{% block body %}
    <style>
        .example-wrapper {
            margin: 1em auto;
            max-width: 800px;
            width: 95%;
            font: 18px/1.5 sans-serif;
        }

        .example-wrapper code {
            background: #F5F5F5;
            padding: 2px 6px;
        }

        .red {
            color: #b0413e;
        }

        .possible {
            color: blue;
        }

        .eatable {
            color: darkred;
        }

        .cell {
            text-align: center;
            cursor: pointer;
            min-width: 20px;
            min-height: 20px;
            border: 1px solid gainsboro;
            margin: auto;
        }

        .cell:hover {
            color: orange;
        }

        .white {
            color: #00B8F5;
        }

        .black {
            color: #000;
            font-weight: bold;
        }

    </style>

    <div class="example-wrapper">
        <!--<h1>Game Shogi âœ…</h1>-->

        <div class="row">
            <div class="col-6">
                <div class="row">
                    <div class="col-12">
                        <div id="main_board">
                            {{ board | raw }}
                        </div>

                    </div>
                </div>
                <hr>
                <div class="row">
                    <div class="col-12">
                        <button class="form-control succes" id="reset_board">
                                <span class="spinner-border spinner-border-sm is-fetching" role="status"
                                      aria-hidden="true"></span>
                            Reset Board
                        </button>
                    </div>
                </div>
                <hr>
                <div class="row">
                    <div class="col-12">
                        <div class="form-group">
                            <label>Piece</label>
                            <input class="form-control" id="piece_id" disabled>
                        </div>
                        <div class="form-group">
                            <label>Row To</label>
                            <input class="form-control" id="row_to" disabled>
                        </div>
                        <div class="form-group">
                            <label>Col To</label>
                            <input class="form-control" id="col_to" disabled>
                        </div>
                        <div id="alert_datos" class="alert  alert-warning alert-dismissible fade show">
                            <strong>Completar movimiento!</strong> Por Favor seleccione pieza y destino.
                        </div>
                        <div class="form-group">
                            <button class="form-control succes" id="make_move">
                                <span class="spinner-border spinner-border-sm is-fetching" role="status"
                                      aria-hidden="true"></span>
                                Make Move
                            </button>
                        </div>
                    </div>
                </div>
            </div>

            {#            <div class="col-6">#}
            {#                <div class="row">#}
            {#                    <div class="col-6">#}
            {#                        <label>Possible piece Moves</label>#}
            {#                        <div id="piece_moves">#}
            {#                        </div>#}
            {#                    </div>#}
            {#                    <div class="col-6">#}
            {#                        <label>Own Pieces</label>#}
            {#                        <div id="own_pieces_board">#}
            {#                        </div>#}
            {#                    </div>#}
            {#                </div>#}
            {#                <hr>#}
            {#                <div class="row">#}
            {#                    <div class="col-6">#}
            {#                        <label>Enemy Pieces</label>#}
            {#                        <div id="enemy_pieces_div">#}
            {#                        </div>#}
            {#                    </div>#}
            {#                    <div class="col-6">#}
            {#                        <label>Result</label>#}
            {#                        <div id="result">#}
            {#                        </div>#}
            {#                    </div>#}
            {#                </div>#}
            {#                <hr>#}
            {#                <div class="row">#}
            {#                    <div class="col-6">#}
            {#                        <label>Not Res</label>#}
            {#                        <div id="not_res_pieces_board">#}
            {#                        </div>#}
            {#                    </div>#}
            {#                    <div class="col-6">#}
            {#                        #}{#                        <label>And Result</label>#}
            {#                        #}{#                        <div id="result">#}
            {#                        #}{#                        </div>#}
            {#                    </div>#}
            {#                </div>#}
            {#            </div>#}
        </div>
    </div>

    <script>

        (function () {

            document.getElementById('alert_datos').style.display = 'none';
            document.getElementsByClassName('is-fetching')[0].style.display = 'none';

            const make_move = document.getElementById('make_move');
            const reset_board = document.getElementById('reset_board');

            make_move.addEventListener('click', function () {
                let id_piece = document.getElementById('piece_id').value;
                let row_to = document.getElementById('row_to').value;
                let col_to = document.getElementById('col_to').value;
                make_move.disabled = true;
                makeMove(id_piece, row_to, col_to);
                make_move.disabled = false;
            });

            reset_board.addEventListener('click', function () {
                reset_board.disabled = true;
                resetBoard();
                reset_board.disabled = false;
                getMainBoard();
            });


            // make_move.addEventListener('click', function () {
            //     let id_piece = document.getElementById('piece_id').value;
            //     let row_to = document.getElementById('row_to').value;
            //     let col_to = document.getElementById('col_to').value;
            //     make_move.disabled = true;
            //     makeMove(id_piece, row_to, col_to);
            //     make_move.disabled = false;
            // });


            function getMainBoard() {
                document.getElementsByClassName('is-fetching')[0].style.display = 'block';
                var httpRequest = new XMLHttpRequest()
                httpRequest.onreadystatechange = function (data) {
                    if (httpRequest.readyState === 4) {
                        document.getElementsByClassName('is-fetching')[0].style.display = 'none';
                        const resultObject = JSON.parse(httpRequest.response);
                        const main_board = document.getElementById('main_board');
                        main_board.innerHTML = resultObject.board;
                        clickCell();
                    }
                };
                httpRequest.open('POST', '{{ path('get_main_board') }}')
                httpRequest.send();
            }


            function resetBoard() {
                document.getElementsByClassName('is-fetching')[0].style.display = 'block';
                var httpRequest = new XMLHttpRequest()
                httpRequest.onreadystatechange = function (data) {
                    if (httpRequest.readyState === 4) {
                        document.getElementsByClassName('is-fetching')[0].style.display = 'none';
                        const resultObject = JSON.parse(httpRequest.response);
                        console.log(resultObject);
                    }
                };
                httpRequest.open('POST', '{{ path('clear_bds') }}')
                httpRequest.send();
            }

            function makeMove(id_piece, row_to, col_to) {
                document.getElementsByClassName('is-fetching')[0].style.display = 'block';
                var httpRequest = new XMLHttpRequest()
                httpRequest.onreadystatechange = function (data) {
                    if (httpRequest.readyState === 4) {
                        document.getElementsByClassName('is-fetching')[0].style.display = 'none';
                        //const resultObject = JSON.parse(httpRequest.response);
                        getMainBoard();
                    }
                };
                httpRequest.open('POST', '{{ path('make_move') }}')
                httpRequest.setRequestHeader('Content-Type', 'application/x-www-form-urlencoded')
                httpRequest.send('id_piece=' + id_piece + '&row_to=' + row_to + '&col_to=' + col_to)
            }


            function sendMove(id_piece) {
                document.getElementsByClassName('is-fetching')[0].style.display = 'block';
                var httpRequest = new XMLHttpRequest()
                httpRequest.onreadystatechange = function (data) {
                    if (httpRequest.readyState === 4) {
                        document.getElementsByClassName('is-fetching')[0].style.display = 'none';
                        clearBoard("move_to_table");

                        const resultObject = JSON.parse(httpRequest.response);
                        // const own_pieces_div = document.getElementById('own_pieces_board');
                        // const enemy_pieces_div = document.getElementById('enemy_pieces_div');
                        // const piece_moves_div = document.getElementById('piece_moves');
                        // const result_div = document.getElementById('result');
                        // const not_res_pieces_board = document.getElementById('not_res_pieces_board');
                        // own_pieces_div.innerHTML = resultObject.ownPieces;
                        // piece_moves_div.innerHTML = resultObject.possibleMoves;
                        // result_div.innerHTML = resultObject.res;
                        // enemy_pieces_div.innerHTML = resultObject.enemyPieces;
                        // not_res_pieces_board.innerHTML = resultObject.notRes;

                        const possibleMovesClear = resultObject.possibleMovesArray.clear;
                        const possibleMovesEat = resultObject.possibleMovesArray.eat;


                        for (let key in possibleMovesClear) {
                            let obj = possibleMovesClear[key];
                            let id = "" + obj[0] + obj[1];
                            document.getElementById(id).classList.add("possible");
                        }

                        for (let key in possibleMovesEat) {
                            let obj = possibleMovesEat[key];
                            let id = "" + obj[0] + obj[1];
                            document.getElementById(id).classList.add("eatable");
                        }


                    }
                };

                httpRequest.open('POST', '{{ path('move_piece') }}')
                httpRequest.setRequestHeader('Content-Type', 'application/x-www-form-urlencoded')
                httpRequest.send('id_piece=' + id_piece)
            }

            function clearBoard(table) {
                var row = document.getElementById('move_to_table').rows;
                var y;
                for (var i = 0; i < row.length; i++) {
                    for (var j = 0; j < row[i].cells.length; j++) {
                        y = row[i].cells;
                        y[j].classList.remove('possible', 'eatable');
                    }
                }
            }


            clickCell();

            function clickCell() {
                var row = document.getElementById('move_to_table').rows;
                for (var i = 0; i < row.length; i++) {
                    for (var j = 0; j < row[i].cells.length; j++) {
                        //console.log(row[i].cells[j].innerHTML);
                        row[i].cells[j].addEventListener('click', function (e) {
                            let row = this.getAttribute("data-row");
                            let col = this.getAttribute("data-col");
                            let id_piece = this.getAttribute("data-piece");
                            setRowCol(row, col, id_piece,);
                        })
                    }
                }
            }

            function setRowCol(row, col, id_piece) {
                if (id_piece != "") {
                    document.getElementById('piece_id').value = id_piece;
                    document.getElementById('alert_datos').style.display = 'none';
                    make_move.disabled = true;
                    sendMove(id_piece);
                    make_move.disabled = false;
                } else {
                    let id_celda = row + col;
                    let celda = document.getElementById(id_celda);
                    if (celda.classList.contains('possible')) {
                        document.getElementById('row_to').value = row;
                        document.getElementById('col_to').value = col;
                        let id_piece = document.getElementById('piece_id').value;
                        let row_to = document.getElementById('row_to').value;
                        let col_to = document.getElementById('col_to').value;
                        make_move.disabled = true;
                        makeMove(id_piece, row_to, col_to);
                        make_move.disabled = false;
                    } else {
                        alert("No es una posiciÃ³n vÃ¡lida para mover");
                    }

                }
            }

        })();
    </script>

{% endblock %}
